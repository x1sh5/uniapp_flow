{
  "version": 3,
  "sources": ["../../signalr-for-wx/dist/IHubProtocol.js", "../../signalr-for-wx/dist/ILogger.js", "../../signalr-for-wx/dist/ITransport.js", "../../signalr-for-wx/dist/Loggers.js", "../../signalr-for-wx/dist/TextMessageFormat.js", "../../signalr-for-wx/dist/JsonHubProtocol.js", "../../signalr-for-wx/dist/AbortController.js", "../../signalr-for-wx/dist/Errors.js", "../../signalr-for-wx/dist/wx-request/model/ResponseType.js", "../../signalr-for-wx/dist/Utils.js", "../../signalr-for-wx/dist/wx-request/model/RequestMethod.js", "../../signalr-for-wx/dist/wx-request/index.js", "../../signalr-for-wx/dist/DefualtRequest.js", "../../signalr-for-wx/dist/LongPollingTransport.js", "../../signalr-for-wx/dist/Polyfills.js", "../../signalr-for-wx/dist/WechatVersionDiff.js", "../../signalr-for-wx/dist/WxSocketTransport.js", "../../signalr-for-wx/dist/HttpConnection.js", "../../signalr-for-wx/dist/HandshakeProtocol.js", "../../signalr-for-wx/dist/HubConnection.js", "../../signalr-for-wx/dist/HubConnectionBuilder.js", "../../signalr-for-wx/dist/index.js"],
  "sourcesContent": ["// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\n/* 定义消息的类型[枚举] */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * - 指示消息是一个 `调用消息` 并实现 {@link @aspnet/signalr.InvocationMessage} 接口。\r\n     */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /**\r\n     * - 指示消息是一个 `流消息` 并实现 {@link @aspnet/signalr.StreamItemMessage} 接口。\r\n     */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /**\r\n     * - 指示消息是一个 `完成消息` 并实现 {@link @aspnet/signalr.CompletionMessage} 接口。\r\n     */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /**\r\n     * - 指示消息是一个 `流调用消息` 并实现 {@link @aspnet/signalr.StreamInvocationMessage} 接口。\r\n     */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /**\r\n     * - 指示消息是一个 `取消调用消息` 并实现 {@link @aspnet/signalr.CancelInvocationMessage} 接口。\r\n     */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /**\r\n     * - 指示消息是一个 `Ping消息` 并实现 {@link @aspnet/signalr.PingMessage} 接口。\r\n     */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /**\r\n     * - 指示消息是一个 `关闭消息` 并实现 {@link @aspnet/signalr.CloseMessage} 接口。\r\n     */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\n//这些值被设计为与ASP.NET日志级别匹配，因为这是我们在这里模拟的模式。\r\n/**\r\n * 指示日志消息的严重性。\r\n * 日志级别按严重性递增的顺序排列。所以“Debug”比“Trace”等更严重。\r\n *\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** 极低严重性诊断消息的日志级别. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** 调试错误. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** 消息. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** 警告. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** 错误. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** 严重错误. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** 最高日志级别。在配置日志记录以指示不应发出日志消息时使用. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\n//这在将来会被当作一个位标志，所以我们使用两个值的幂来保持它。\r\n/**指定特定的HTTP传输类型。*/\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /**未指定传输首选项。*/\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /**指定WebSocket传输。*/\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /**指定长轮询传输。*/\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/**指定连接的传输格式。*/\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /**指定仅通过连接传输文本数据。*/\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /**指定将通过连接传输二进制数据。*/\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\n/** 未定义 logger 时使用的 空输出实现. */\r\nvar NullLogger = /** @class */ (function () {\r\n    function NullLogger() {\r\n    }\r\n    NullLogger.prototype.log = function (logLevel) {\r\n        var msg = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            msg[_i - 1] = arguments[_i];\r\n        }\r\n    };\r\n    /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\r\n    NullLogger.instance = new NullLogger();\r\n    return NullLogger;\r\n}());\r\nexport { NullLogger };\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\n// 未从索引导出\r\n/**\r\n * 文本类型消息格式化\r\n * @private\r\n */\r\nvar TextMessageFormat = /** @class */ (function () {\r\n    function TextMessageFormat() {\r\n    }\r\n    /**\r\n     * 输出一个格式化过的消息\r\n     * @param output\r\n     */\r\n    TextMessageFormat.write = function (output) {\r\n        return \"\" + output + TextMessageFormat.RecordSeparator;\r\n    };\r\n    /**\r\n     * 解析\r\n     * @param input\r\n     */\r\n    TextMessageFormat.parse = function (input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        var messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    };\r\n    /**\r\n     * 记录分隔符 code\r\n     *\r\n     * @static\r\n     * @memberof TextMessageFormat\r\n     */\r\n    TextMessageFormat.RecordSeparatorCode = 0x1e;\r\n    /**\r\n     * 记录分隔符(string)\r\n     *\r\n     * @static\r\n     * @memberof TextMessageFormat\r\n     */\r\n    TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n    return TextMessageFormat;\r\n}());\r\nexport { TextMessageFormat };\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nvar JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nvar JsonHubProtocol = /** @class */ (function () {\r\n    function JsonHubProtocol() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /**\r\n     * Creates an array of {@link @aspnet/signalr.HubMessage} objects from the specified serialized representation.\r\n     * 从指定的序列化表示创建{@link@aspnet/signaler.HubMessage}对象数组\r\n     *\r\n     * @param {string} input 包含序列化表示的字符串 A string containing the serialized representation.\r\n     * @param {ILogger} logger\r\n     */\r\n    JsonHubProtocol.prototype.parseMessages = function (input, logger) {\r\n        // 接口允许传入“ArrayBuffer”，但此实现不允许。所以让我们抛出一个有用的错误\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string. (fy:包含一个无效的JSON协议输入,但是这里需要输入string 消息)\");\r\n        }\r\n        // fixed\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        // fixed\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // string 类型消息格式化转换\r\n        var messages = TextMessageFormat.parse(input);\r\n        var hubMessages = [];\r\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n            var message = messages_1[_i];\r\n            // 转换消息\r\n            var parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload. (fy: 无效的消息)\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation: // 调用命令\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem: // 流消息\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion: // 完成消息\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping: // ping 命令\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close: // 关闭命令\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default: // 未定义命令,抛出异常\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    };\r\n    /**\r\n     * Writes the specified {@link @aspnet/signalr.HubMessage} to a string and returns it.\r\n     * 将指定的{@link@aspnet/signalr.HubMessage}写入字符串并返回\r\n     *\r\n     * @param {HubMessage} message The message to write. 消息内容\r\n     * @returns {string} 包含消息的序列化表示形式的字符串。\r\n     */\r\n    JsonHubProtocol.prototype.writeMessage = function (message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    };\r\n    /**\r\n     * 判断是否是一个正常的调用消息\r\n     * @param message\r\n     */\r\n    JsonHubProtocol.prototype.isInvocationMessage = function (message) {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message. (fy:无效的 [调用] 消息)\");\r\n        }\r\n    };\r\n    /**\r\n     * 判断是否是一个流消息子项\r\n     * @param message\r\n     */\r\n    JsonHubProtocol.prototype.isStreamItemMessage = function (message) {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message. (fy:无效的 [StreamItem] 消息)\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message. (fy:无效的 [StreamItem] 消息)\");\r\n        }\r\n    };\r\n    /**\r\n     * 判断是否是一个完整的消息\r\n     * @param message\r\n     */\r\n    JsonHubProtocol.prototype.isCompletionMessage = function (message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message (fy:消息不完整).\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message (fy:消息不完整).\");\r\n        }\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message (fy:消息不完整).\");\r\n    };\r\n    /**\r\n     * 断言非空字符串\r\n     * @param value\r\n     * @param errorMessage\r\n     */\r\n    JsonHubProtocol.prototype.assertNotEmptyString = function (value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n    return JsonHubProtocol;\r\n}());\r\nexport { JsonHubProtocol };\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\n//粗略填写 https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n//实际上，我们从来没有使用被polyfill填充的API，我们总是使用polyfill，因为\r\n//它现在还是一个非常新的API。\r\n/**\r\n *\r\n *  @private\r\n */\r\nvar AbortController = /** @class */ (function () {\r\n    function AbortController() {\r\n        this.isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    AbortController.prototype.abort = function () {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(AbortController.prototype, \"signal\", {\r\n        get: function () {\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbortController.prototype, \"aborted\", {\r\n        get: function () {\r\n            return this.isAborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbortController;\r\n}());\r\nexport { AbortController };\r\n", "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\n/**\r\n * Error thrown when an HTTP request fails.\r\n * HTTP请求失败时引发错误。\r\n */\r\nvar HttpError = /** @class */ (function (_super) {\r\n    __extends(HttpError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    function HttpError(errorMessage, statusCode) {\r\n        var _newTarget = this.constructor;\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        _this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return HttpError;\r\n}(Error));\r\nexport { HttpError };\r\n/**\r\n * Error thrown when a timeout elapses.\r\n * 超时错误\r\n */\r\nvar TimeoutError = /** @class */ (function (_super) {\r\n    __extends(TimeoutError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function TimeoutError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"A timeout occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return TimeoutError;\r\n}(Error));\r\nexport { TimeoutError };\r\n/**\r\n * Error thrown when an action is aborted.\r\n * 连接错误\r\n */\r\nvar AbortError = /** @class */ (function (_super) {\r\n    __extends(AbortError, _super);\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function AbortError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"An abort occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return AbortError;\r\n}(Error));\r\nexport { AbortError };\r\n/**\r\n * Error thrown when message event is not found.\r\n * 事件未定义\r\n */\r\nvar EventNotFoundError = /** @class */ (function (_super) {\r\n    __extends(EventNotFoundError, _super);\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function EventNotFoundError(invocationMessage, errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"message event not found.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        _this.methodName = invocationMessage.target;\r\n        _this.invocationMessage = invocationMessage;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return EventNotFoundError;\r\n}(Error));\r\nexport { EventNotFoundError };\r\n", "/**\r\n * 响应数据类型\r\n *\r\n * @interface ResponseType\r\n */\r\nexport var ResponseType;\r\n(function (ResponseType) {\r\n    /**\r\n     * JSON 类型\r\n     */\r\n    ResponseType[\"JSON\"] = \"json\";\r\n    /**\r\n     * 文本类型(跳过返回数据处理链,直接返回)\r\n     */\r\n    ResponseType[\"TEXT\"] = \"text\";\r\n    /**\r\n     * 二进制数据\r\n     */\r\n    ResponseType[\"ARRAY_BUFFER\"] = \"arraybuffer\";\r\n})(ResponseType || (ResponseType = {}));\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { ResponseType } from \"./wx-request/model/ResponseType\";\r\n/**\r\n * 参数处理方法\r\n *  @private\r\n */\r\nvar Arg = /** @class */ (function () {\r\n    function Arg() {\r\n    }\r\n    /**\r\n     * 是否存在\r\n     *\r\n     * @static\r\n     * @param {*} val\r\n     * @param {string} name\r\n     * @memberof Arg\r\n     */\r\n    Arg.isRequired = function (val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(\"The '\" + name + \"' argument is required.\");\r\n        }\r\n    };\r\n    /**\r\n     * 是否包含\r\n     *\r\n     * @static\r\n     * @param {*} val\r\n     * @param {*} values\r\n     * @param {string} name\r\n     * @memberof Arg\r\n     */\r\n    Arg.isIn = function (val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\r\n        }\r\n    };\r\n    /**\r\n     * 验证url是否被微信支持\r\n     */\r\n    Arg.validationUrlIsSupportByWechat = function (url) {\r\n        if (!url) {\r\n            throw new Error(\"Url is undefined.\");\r\n        }\r\n        else if (!/^(ws|wws):\\/\\//.test(url)) {\r\n            if (/^http/.test(url)) {\r\n                return url.replace(/^http/, \"wx\");\r\n            }\r\n            throw new Error(\"error: instantiation [url](\" + url + \") not supported by wechat miniprogram.\");\r\n        }\r\n        else {\r\n            return url;\r\n        }\r\n    };\r\n    return Arg;\r\n}());\r\nexport { Arg };\r\n/**\r\n * 获取data details\r\n * @param data origin data\r\n * @param includeContent 是否导出上下文?\r\n */\r\nexport function getDataDetail(data, includeContent) {\r\n    var detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = \"Binary data of length \" + data.byteLength;\r\n        if (includeContent) {\r\n            detail += \". Content: '\" + formatArrayBuffer(data) + \"'\";\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = \"String data of length \" + data.length;\r\n        if (includeContent) {\r\n            detail += \". Content: '\" + data + \"'\";\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/**\r\n * 格式化 array buffer\r\n * @private\r\n */\r\nexport function formatArrayBuffer(data) {\r\n    var view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    var str = \"\";\r\n    view.forEach(function (num) {\r\n        var pad = num < 16 ? \"0\" : \"\";\r\n        str += \"0x\" + pad + num.toString(16) + \" \";\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/**\r\n * 判断是不是 ArrayBuffer\r\n * @private\r\n */\r\nexport function isArrayBuffer(val) {\r\n    return (val &&\r\n        typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\")));\r\n}\r\n/**\r\n * 发送消息\r\n * @param logger 日志工具\r\n * @param transportName\r\n * @param request  - 注: 原版代码为 httpClient,这里使用 wx-request.\r\n * @param url\r\n * @param accessTokenFactory\r\n * @param content\r\n * @param logMessageContent\r\n */\r\nexport function sendMessage(logger, transportName, request, url, accessTokenFactory, content, logMessageContent) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var headers, token, responseType, response;\r\n        var _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    if (!accessTokenFactory) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, accessTokenFactory()];\r\n                case 1:\r\n                    token = _b.sent();\r\n                    if (token) {\r\n                        headers = (_a = {},\r\n                            _a[\"Authorization\"] = \"Bearer \" + token,\r\n                            _a);\r\n                    }\r\n                    _b.label = 2;\r\n                case 2:\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\r\n                    responseType = isArrayBuffer(content) ? ResponseType.ARRAY_BUFFER : ResponseType.TEXT;\r\n                    return [4 /*yield*/, request.post(url, content, {\r\n                            headers: headers,\r\n                            responseType: responseType\r\n                        })];\r\n                case 3:\r\n                    response = _b.sent();\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * 创建一个 logger\r\n * @private\r\n */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/**\r\n * 订阅接口实现\r\n * @private\r\n */\r\nvar Subject = /** @class */ (function () {\r\n    function Subject(cancelCallback) {\r\n        this.observers = [];\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    Subject.prototype.next = function (item) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            observer.next(item);\r\n        }\r\n    };\r\n    Subject.prototype.error = function (err) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.complete = function () {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.subscribe = function (observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    };\r\n    return Subject;\r\n}());\r\nexport { Subject };\r\n/**\r\n * 主题订阅??\r\n * 应该时定制 断开流 的 实现吧.\r\n * @private\r\n */\r\nvar SubjectSubscription = /** @class */ (function () {\r\n    function SubjectSubscription(subject, observer) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n    SubjectSubscription.prototype.dispose = function () {\r\n        var index = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n        if (this.subject.observers.length === 0) {\r\n            this.subject.cancelCallback().catch(function (_) { });\r\n        }\r\n    };\r\n    return SubjectSubscription;\r\n}());\r\nexport { SubjectSubscription };\r\n/**\r\n * console logger 内置实现\r\n * @private\r\n */\r\nvar ConsoleLogger = /** @class */ (function () {\r\n    /**\r\n     * 构造方法 定义 最小输出日志等级\r\n     * @param {LogLevel} minimumLogLevel\r\n     * @memberof ConsoleLogger\r\n     */\r\n    function ConsoleLogger(minimumLogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n    }\r\n    /**\r\n     * 日志输出\r\n     *\r\n     * @param {LogLevel} logLevel\r\n     * @param {string} message\r\n     * @memberof ConsoleLogger\r\n     */\r\n    ConsoleLogger.prototype.log = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        var logLevel = LogLevel.Information;\r\n        for (var _a = 0, _b = arguments; _a < _b.length; _a++) {\r\n            var ll = _b[_a];\r\n            if (Object.values(LogLevel).indexOf(ll) != -1) {\r\n                logLevel = ll;\r\n                break;\r\n            }\r\n        }\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    console.error.apply(console, __spreadArrays([\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \" =>\"], msg.slice(1, msg.length)));\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    console.warn.apply(console, __spreadArrays([\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \" =>\"], msg));\r\n                    break;\r\n                case LogLevel.Information:\r\n                    console.info.apply(console, __spreadArrays([\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \" =>\"], msg));\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    console.log.apply(console, __spreadArrays([\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \" =>\"], msg));\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ConsoleLogger;\r\n}());\r\nexport { ConsoleLogger };\r\n", "/**\r\n * 请求类型\r\n */\r\nexport var RequestMethod;\r\n(function (RequestMethod) {\r\n    RequestMethod[\"GET\"] = \"GET\";\r\n    RequestMethod[\"POST\"] = \"POST\";\r\n    RequestMethod[\"PUT\"] = \"PUT\";\r\n    RequestMethod[\"DELETE\"] = \"DELETE\";\r\n})(RequestMethod || (RequestMethod = {}));\r\n", "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { RequestMethod } from \"./model/RequestMethod\";\r\nimport { ResponseType } from \"./model/ResponseType\";\r\nimport { LogLevel } from \"../ILogger\";\r\nimport { TimeoutError, HttpError } from \"../Errors\";\r\nimport { NullLogger } from \"../Loggers\";\r\n/**\r\n * 封装微信ajax请求工具\r\n * @author halo\r\n */\r\nvar Request = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of Request.\r\n     * 实例化配置\r\n     * @param {*} [config]\r\n     * @memberof Request\r\n     */\r\n    function Request(config, logger) {\r\n        if (config === void 0) { config = {}; }\r\n        // 写入配置\r\n        if (wx) {\r\n            // Time: 继承 signalR logger. 日志统一维护\r\n            this.logger = logger ? logger : new NullLogger();\r\n        }\r\n        else {\r\n            throw new Error(\"当前运行环境不是微信运行环境\");\r\n        }\r\n        // custom wx request promise library.\r\n        this.setConfig(config);\r\n    }\r\n    /**\r\n     * merge config\r\n     * @param config\r\n     */\r\n    Request.prototype.setConfig = function (config) {\r\n        if (config === void 0) { config = {}; }\r\n        // 合并默认配置和\r\n        this.config = __assign({ baseUrl: \"http://\", headers: { \"Content-Type\": \"application/json\" }, forceEnableHttps: false, method: RequestMethod.GET, responseType: ResponseType.JSON, responseEncoding: \"utf8\", timeout: 60 * 1000, transformRequest: [], transformResponse: [] }, config);\r\n        // 请求头默认附加response 解析器\r\n        if (!this.config.transformResponse) {\r\n            this.config.transformResponse = [];\r\n        }\r\n        this.logger.log(LogLevel.Information, \"set config success.\");\r\n    };\r\n    /**\r\n     * 请求参数序列化\r\n     *\r\n     * @param {RequestOptions} options\r\n     * @memberof Request\r\n     *\r\n     * @description 只支持普通get请求,和content-type = json 的 其他请求(post,put,delete,patch)\r\n     */\r\n    Request.prototype.handleRequestOptions = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _i, _a, fun, e_1;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        // 请求地址处理,对于非<scene>:// 请求,附加baseUrl\r\n                        if (options.url && !/:\\/\\/.+?/.test(options.url)) {\r\n                            options.url = ((options.config ? options.config.baseUrl : \"\") + \"/\" + options.url).replace(/([^:])(\\/\\/)/g, \"$1/\");\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"checked request url\");\r\n                        // https 处理\r\n                        if (options.config && options.config.forceEnableHttps) {\r\n                            options.url = options.url.replace(/http:/, \"https:\");\r\n                            this.logger.log(LogLevel.Trace, \"execute fix [request.config.forceEnableHttps] \" + options.url);\r\n                        }\r\n                        // header 合并\r\n                        options.headers = Object.assign({}, options.config ? options.config.headers : {}, options.headers);\r\n                        this.logger.log(LogLevel.Trace, \"merge headers \", options.headers);\r\n                        // 移除微信封锁参数\r\n                        delete options.headers[\"Referer\"];\r\n                        this.logger.log(LogLevel.Trace, \"try delete headers Referer.\");\r\n                        // 替换请求内的ResponseType\r\n                        options.responseType = options.responseType\r\n                            ? options.responseType\r\n                            : options.config\r\n                                ? options.config.responseType\r\n                                : ResponseType.TEXT;\r\n                        this.logger.log(LogLevel.Trace, \"checked responseType [\" + options.responseType + \"]\");\r\n                        if (!(options.config && options.config.transformRequest)) return [3 /*break*/, 6];\r\n                        this.logger.log(LogLevel.Trace, \"execute transform request list. -result\\n\", options.config);\r\n                        _i = 0, _a = options.config.transformRequest;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(_i < _a.length)) return [3 /*break*/, 6];\r\n                        fun = _a[_i];\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, fun(options)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_1 = _b.sent();\r\n                        throw e_1;\r\n                    case 5:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 6:\r\n                        // debug print handled request options\r\n                        this.logger.log(LogLevel.Debug, \"handled request options \\n\", options);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 验证响应结果,执行回调\r\n     *\r\n     * @param {*} resolve\r\n     * @param {*} reject\r\n     * @param {*} response\r\n     * @memberof Request\r\n     */\r\n    Request.prototype.handleResponse = function (response) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _i, _a, fun, res_1;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(response.options.config &&\r\n                            response.options.config.responseType == \"json\" &&\r\n                            response.options.config.transformResponse)) return [3 /*break*/, 6];\r\n                        _i = 0, _a = response.options.config.transformResponse;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(_i < _a.length)) return [3 /*break*/, 6];\r\n                        fun = _a[_i];\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 4, , 5]);\r\n                        // handler response\r\n                        return [4 /*yield*/, fun(response)];\r\n                    case 3:\r\n                        // handler response\r\n                        _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        res_1 = _b.sent();\r\n                        this.logger.log(LogLevel.Trace, \"execute transform request list. -result \\n \", res_1);\r\n                        throw res_1;\r\n                    case 5:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 6:\r\n                        // debug print handled response context\r\n                        this.logger.log(LogLevel.Debug, \"handled response context \\n\", response);\r\n                        return [2 /*return*/, Promise.resolve(response)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 执行请求\r\n     *\r\n     * @param {RequestOptions} [options={\r\n     *       url: this.config.baseUrl\r\n     *     }]\r\n     * @returns {Promise<any>}\r\n     * @memberof Request\r\n     */\r\n    Request.prototype.executeRequest = function (options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var error_1, task;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.log(LogLevel.Trace, \"execute request -options \\n\", options);\r\n                        // 合并 baseConfig\r\n                        options.config = options.config ? __assign(__assign({}, this.config), options.config) : __assign({}, this.config);\r\n                        if (this.checkAbout(options.config, reject))\r\n                            return [2 /*return*/];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        // 序列化请求参数\r\n                        return [4 /*yield*/, this.handleRequestOptions(options)];\r\n                    case 2:\r\n                        // 序列化请求参数\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        // 抛出异常.\r\n                        return [2 /*return*/, reject(__assign({ data: null, header: null, statusCode: -1, options: options }, error_1))];\r\n                    case 4:\r\n                        if (this.checkAbout(options.config, reject))\r\n                            return [2 /*return*/];\r\n                        // print fixed options\r\n                        this.logger.log(LogLevel.Debug, \"fixed options \\n\", options);\r\n                        // execute request\r\n                        this.logger.log(LogLevel.Trace, \"invoke uni.requestWithCookie\");\r\n                        task = uni.requestWithCookie({\r\n                            url: options.url,\r\n                            data: options.data,\r\n                            dataType: options.responseType,\r\n                            header: options.headers,\r\n                            method: options.method,\r\n                            responseType: (function () {\r\n                                switch (options.responseType) {\r\n                                    case \"json\":\r\n                                    case \"text\":\r\n                                        return \"text\";\r\n                                    case \"arraybuffer\":\r\n                                        return \"arraybuffer\";\r\n                                }\r\n                            })(),\r\n                            success: function (res) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var data, header, statusCode, errMsg, responseOptions;\r\n                                var _this = this;\r\n                                return __generator(this, function (_a) {\r\n                                    if (this.checkAbout(options.config, reject))\r\n                                        return [2 /*return*/];\r\n                                    this.logger.log(LogLevel.Debug, \"origin response context \\n\", res);\r\n                                    data = res.data, header = res.header, statusCode = res.statusCode, errMsg = res.errMsg;\r\n                                    responseOptions = {\r\n                                        data: data,\r\n                                        header: header,\r\n                                        statusCode: statusCode,\r\n                                        options: options,\r\n                                        errMsg: errMsg\r\n                                    };\r\n                                    // 调用响应处理链(并返回结果)\r\n                                    this.handleResponse(responseOptions)\r\n                                        .then(function (res) {\r\n                                        // print debug\r\n                                        _this.logger.log(LogLevel.Debug, \"handle response context is success. \\n\", res);\r\n                                        /**\r\n                                         * check and cache cookie (if has) |\r\n                                         * @description 这里因为 signalR的原因,内置了一个 cookies.js [library](https://github.com/jshttp/cookie/index.js)\r\n                                         * 略有改写,暂时将cookie 扔到内存中维护(毕竟就signalr使用,不考虑扔到 localStore 中占地方).\r\n                                         */\r\n                                        if (options.config.cookie)\r\n                                            options.config.cookie.set(options.url, header);\r\n                                        // callback\r\n                                        resolve(res);\r\n                                    })\r\n                                        .catch(function (res) {\r\n                                        // print log\r\n                                        _this.logger.log(LogLevel.Error, \"handle response context is fail. \\n \", res);\r\n                                        // ! 这里为了兼容 signalR的错误格式,抛出继承了HttpError异常.\r\n                                        var httpError = new HttpError(res.errMsg, res.statusCode);\r\n                                        // callback  - 合并后,返回,可以被认定为 继承 HttpError对象.\r\n                                        reject(__assign(__assign({}, res), httpError));\r\n                                    });\r\n                                    return [2 /*return*/];\r\n                                });\r\n                            }); },\r\n                            fail: function (res) {\r\n                                var responseOptions = null;\r\n                                if (res && /request:fail socket time out timeout/.test(res.errMsg)) {\r\n                                    // ! 这里为了兼容 signalR的错误格式,抛出继承了TimeoutError异常.\r\n                                    responseOptions = __assign({ data: null, status: -1, errMsg: res.errMsg }, new TimeoutError(res.errMsg));\r\n                                }\r\n                                else {\r\n                                    // ! 这里为了兼容 signalR的错误格式,抛出继承了HttpError异常.\r\n                                    responseOptions = __assign({ data: null, status: -1, errMsg: res.errMsg }, new HttpError(res.errMsg, 500));\r\n                                }\r\n                                /**\r\n                                 *  @date 2019年12月11日 13:14:25\r\n                                 * ! 修复bug,uni.requestWithCookie fail 情况下, 未调用 response 处理链.\r\n                                 */\r\n                                // 调用响应处理链(并返回结果)\r\n                                _this.handleResponse(responseOptions)\r\n                                    .then(function (res) {\r\n                                    // print debug\r\n                                    _this.logger.log(LogLevel.Debug, \"handle response context is success. \\n\", res);\r\n                                    /**\r\n                                     * check and cache cookie (if has) |\r\n                                     * @description 这里因为 signalR的原因,内置了一个 cookies.js [library](https://github.com/jshttp/cookie/index.js)\r\n                                     * 略有改写,暂时将cookie 扔到内存中维护(毕竟就signalr使用,不考虑扔到 localStore 中占地方).\r\n                                     */\r\n                                    if (options.config.cookie)\r\n                                        options.config.cookie.set(options.url, {});\r\n                                    // callback\r\n                                    resolve(res);\r\n                                })\r\n                                    .catch(function (res) {\r\n                                    // print log\r\n                                    _this.logger.log(LogLevel.Error, \"handle response context is fail. \\n \", res);\r\n                                    // ! 这里为了兼容 signalR的错误格式,抛出继承了HttpError异常.\r\n                                    var httpError = new HttpError(res.errMsg, res.statusCode);\r\n                                    // callback  - 合并后,返回,可以被认定为 继承 HttpError对象.\r\n                                    reject(__assign(__assign({}, res), httpError));\r\n                                });\r\n                            }\r\n                        });\r\n                        // 监听 headers 变化\r\n                        task.onHeadersReceived(function () {\r\n                            // 当检查到 about() 状态,中断请求\r\n                            if (_this.checkAbout(options.config, reject)) {\r\n                                // 中断请求\r\n                                task.abort();\r\n                                return;\r\n                            }\r\n                        });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * 检查中断\r\n     *\r\n     * @memberof Request\r\n     */\r\n    Request.prototype.checkAbout = function (options, reject) {\r\n        if (options.config && options.config.about) {\r\n            reject({\r\n                data: null,\r\n                header: options.headers,\r\n                statusCode: 412,\r\n                options: options,\r\n                errMsg: \"网络异常\" // 直接自定义错误了.\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * GET 请求\r\n     * @description 封装调用\r\n     * @param url 请求地址\r\n     * @param data 请求参数\r\n     * @param options 请求配置\r\n     */\r\n    Request.prototype.get = function (url, data, options) {\r\n        if (data === void 0) { data = {}; }\r\n        // print execute step\r\n        this.logger.log(LogLevel.Trace, \"invoke request.get()\");\r\n        // merge config\r\n        var requestOptions = __assign(__assign({}, (function () { return (options ? options : {}); })()), { method: RequestMethod.GET, url: url,\r\n            data: data });\r\n        // execute and response\r\n        return this.executeRequest(requestOptions);\r\n    };\r\n    /**\r\n     * POST 请求\r\n     * @description 封装调用\r\n     * @param url 请求地址\r\n     * @param data 请求参数\r\n     * @param options 请求配置\r\n     */\r\n    Request.prototype.post = function (url, data, options) {\r\n        if (data === void 0) { data = {}; }\r\n        // print execute step\r\n        this.logger.log(LogLevel.Trace, \"invoke request.post()\");\r\n        // merge config\r\n        var requestOptions = __assign(__assign({}, (function () { return (options ? options : {}); })()), { method: RequestMethod.POST, url: url,\r\n            data: data });\r\n        // execute and response\r\n        return this.executeRequest(requestOptions);\r\n    };\r\n    /**\r\n     * PUT 请求\r\n     * @description 封装调用\r\n     * @param url 请求地址\r\n     * @param data 请求参数\r\n     * @param options 请求配置\r\n     */\r\n    Request.prototype.put = function (url, data, options) {\r\n        if (data === void 0) { data = {}; }\r\n        // print execute step\r\n        this.logger.log(LogLevel.Trace, \"invoke request.put()\");\r\n        // merge config\r\n        var requestOptions = __assign(__assign({}, (function () { return (options ? options : {}); })()), { method: RequestMethod.PUT, url: url,\r\n            data: data });\r\n        // execute and response\r\n        return this.executeRequest(requestOptions);\r\n    };\r\n    /**\r\n     * DELETE 请求\r\n     * @description 封装调用\r\n     * @param url 请求地址\r\n     * @param data 请求参数\r\n     * @param options 请求配置\r\n     */\r\n    Request.prototype.delete = function (url, data, options) {\r\n        if (data === void 0) { data = {}; }\r\n        // print execute step\r\n        this.logger.log(LogLevel.Trace, \"invoke request.delete()\");\r\n        // merge config\r\n        var requestOptions = __assign(__assign({}, (function () { return (options ? options : {}); })()), { method: RequestMethod.DELETE, url: url,\r\n            data: data });\r\n        // execute and response\r\n        return this.executeRequest(requestOptions);\r\n    };\r\n    /**\r\n     * 多请求同步执行\r\n     * @param taskQueue\r\n     */\r\n    Request.prototype.all = function (taskQueue) {\r\n        // print execute step\r\n        this.logger.log(LogLevel.Trace, \"invoke request.all()\");\r\n        // merge config\r\n        return Promise.all(taskQueue);\r\n    };\r\n    /**\r\n     * 用于兼容 @aspnet/signalR 的 获取 cookie 方法\r\n     *\r\n     * @description 这里用内存对象来维护一个 在线 cookies\r\n     * @param {string} url\r\n     * @returns\r\n     * @memberof Request\r\n     */\r\n    Request.prototype.getCookieString = function (url) {\r\n        if (this.config && this.config.cookie) {\r\n            return this.config.cookie.origin(url);\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    };\r\n    Request.prototype.cookie = function (url, key) {\r\n        if (this.config && this.config.cookie) {\r\n            return this.config.cookie.get(url, key);\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    };\r\n    return Request;\r\n}());\r\nexport { Request };\r\n", "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { Request } from \"./wx-request/index\";\r\nimport { RequestMethod, ResponseType } from \"./wx-request/model\";\r\n/**\r\n * 生成默认请求库\r\n *\r\n * @export\r\n * @class DefaultRequest\r\n */\r\nvar DefaultRequest = /** @class */ (function (_super) {\r\n    __extends(DefaultRequest, _super);\r\n    function DefaultRequest(config, logger) {\r\n        var _this = _super.call(this) || this;\r\n        _this.logger = logger\r\n            ? logger\r\n            : {\r\n                log: function (logLevel, message) {\r\n                    /* 屏蔽打印 */\r\n                }\r\n            };\r\n        // default config\r\n        _this.setConfig(__assign({ about: false, forceEnableHttps: false, headers: {}, method: RequestMethod.GET, responseEncoding: ResponseType.JSON, timeout: 2 * 60 * 1000, transformRequest: [], transformResponse: [] }, config));\r\n        return _this;\r\n    }\r\n    return DefaultRequest;\r\n}(Request));\r\nexport default DefaultRequest;\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\nimport { ResponseType } from \"./wx-request/model/ResponseType\";\r\nimport { NullLogger } from './Loggers';\r\nimport DefaultRequest from \"./DefualtRequest\";\r\n// Not exported from 'index', this type is internal.\r\n/**\r\n * 长轮询\r\n * @private\r\n */\r\nvar LongPollingTransport = /** @class */ (function () {\r\n    /**\r\n     * 导出 request 工具\r\n     * @param {Request} request\r\n     * @param {((() => string | Promise<string>) | undefined)} accessTokenFactory access-token-factory\r\n     * @param {ILogger} logger\r\n     * @param {boolean} logMessageContent\r\n     * @memberof LongPollingTransport\r\n     */\r\n    function LongPollingTransport(options) {\r\n        this.accessTokenFactory = options.accessTokenFactory ? options.accessTokenFactory : undefined;\r\n        this.logger = options.logger ? options.logger : new NullLogger();\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = options.logMessageContent ? options.logMessageContent : false;\r\n        this.request = options.request ? options.request : new DefaultRequest({}, this.logger);\r\n        this.running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    Object.defineProperty(LongPollingTransport.prototype, \"pollAborted\", {\r\n        // This is an internal type, not exported from 'index' so this is really just internal.\r\n        get: function () {\r\n            return this.pollAbort.aborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * 连接 - 这里理解为请求\r\n     *\r\n     * @param {string} url\r\n     * @param {TransferFormat} transferFormat\r\n     * @returns {Promise<void>}\r\n     * @memberof LongPollingTransport\r\n     */\r\n    LongPollingTransport.prototype.connect = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pollOptions, token, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        /* 验证参数完整性,不完整抛出异常 */\r\n                        Arg.isRequired(options, \"options\");\r\n                        Arg.isRequired(options.transferFormat, \"transferFormat\");\r\n                        Arg.isIn(options.transferFormat, TransferFormat, \"transferFormat\");\r\n                        // update options\r\n                        this.url = options.url;\r\n                        // print log\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n                        pollOptions = {\r\n                            config: {\r\n                                // 中断信号\r\n                                about: this.pollAbort.signal.aborted,\r\n                                timeout: 120 * 1000 // 超时时间 2 min\r\n                            },\r\n                            // origin header 头\r\n                            headers: {}\r\n                        };\r\n                        if (options.transferFormat === TransferFormat.Binary) {\r\n                            pollOptions.responseType = ResponseType.ARRAY_BUFFER;\r\n                        }\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        // Make initial long polling request\r\n                        // Server uses first long polling request to finish initializing connection and it returns without data\r\n                        //发出初始长轮询请求\r\n                        //服务器使用第一个长轮询请求完成连接初始化，它返回时不带数据\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: [url]\" + this.url);\r\n                        return [4 /*yield*/, this.request.get(this.url, {\r\n                                _: Date.now()\r\n                            }, pollOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\");\r\n                            // Mark running as false so that the poll immediately ends and runs the close logic\r\n                            // ! 重写了 内置 的 创建 `HttpError` 方法\r\n                            this.closeError = new HttpError(response.errMsg || \"\", response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            this.running = true;\r\n                        }\r\n                        this.receiving = this.poll(this.url, pollOptions);\r\n                        return [2 /*return*/, Promise.resolve({\r\n                                errMsg: \"connect success\"\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取 access-token\r\n     *\r\n     * @private\r\n     * @returns {(Promise<string | null>)}\r\n     * @memberof LongPollingTransport\r\n     */\r\n    LongPollingTransport.prototype.getAccessToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 更新 access-token\r\n     *\r\n     * @private\r\n     * @param {RequestOption} request\r\n     * @param {(string | null)} token\r\n     * @returns\r\n     * @memberof LongPollingTransport\r\n     */\r\n    LongPollingTransport.prototype.updateHeaderToken = function (request, token) {\r\n        /**\r\n         * fix header\r\n         */\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        /**\r\n         * push token to headers\r\n         */\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = \"Bearer \" + token;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    };\r\n    /**\r\n     * 异步计数?\r\n     *\r\n     * @private\r\n     * @param {string} url\r\n     * @param {RequestOption} pollOptions\r\n     * @returns {Promise<void>}\r\n     * @memberof LongPollingTransport\r\n     */\r\n    LongPollingTransport.prototype.poll = function (url, pollOptions) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, pollUrl, response, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 8, 9]);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!this.running) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".  - (fy:\\u957F\\u8F6E\\u8BE2\\u4F20\\u8F93 - polling)\");\r\n                        return [4 /*yield*/, this.request.get(this.url, {\r\n                                _: Date.now()\r\n                            }, pollOptions)];\r\n                    case 4:\r\n                        response = _a.sent();\r\n                        if (response.statusCode === 204) {\r\n                            this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server. - (fy:长轮询传输 - 由服务器终止轮询。)\");\r\n                            this.running = false;\r\n                        }\r\n                        else if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".  - (fy:\\u957F\\u8F6E\\u8BE2\\u4F20\\u8F93 - \\u610F\\u5916\\u7684\\u54CD\\u5E94\\u4EE3\\u7801)\");\r\n                            // Unexpected status code\r\n                            this.closeError = new HttpError(response.errMsg || \"\", response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            // Process the response\r\n                            if (response.data) {\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) data received. \" + getDataDetail(response.data, this.logMessageContent) + \".\");\r\n                                if (this.onreceive) {\r\n                                    this.onreceive(response.data);\r\n                                }\r\n                            }\r\n                            else {\r\n                                // This is another way timeout manifest.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        if (!this.running) {\r\n                            // Log but disregard errors that occur after stopping - fy: 记录但忽略停止后发生的错误\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll errored after shutdown: \" + e_1.message);\r\n                        }\r\n                        else {\r\n                            if (e_1 instanceof TimeoutError) {\r\n                                // Ignore timeouts and reissue the poll. - 忽略超时并重新发出投票\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.  - (fy:长轮询传输 - 请求超时)\");\r\n                            }\r\n                            else {\r\n                                // Close the connection with the error as the result.\r\n                                this.closeError = e_1;\r\n                                this.running = false;\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [3 /*break*/, 1];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.   - (fy:长轮询传输 - 请求完成)\");\r\n                        // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n                        // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n                        //当服务器返回导致传输停止的响应时，我们将使用pollAborted==false到达这里。\r\n                        //如果pollAborted==true，则客户端启动了stop，stop方法将在发送DELETE后引发close事件。\r\n                        if (!this.pollAborted) {\r\n                            this.raiseOnClose();\r\n                        }\r\n                        return [7 /*endfinally*/];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 发送轮询包\r\n     *\r\n     * @param {*} data\r\n     * @returns {Promise<void>}\r\n     * @memberof LongPollingTransport\r\n     */\r\n    LongPollingTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.running) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"LongPolling\", this.request, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 停止\r\n     *\r\n     * @returns {Promise<void>}\r\n     * @memberof LongPollingTransport\r\n     */\r\n    LongPollingTransport.prototype.stop = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var deleteOptions, token, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n                        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n                        this.running = false;\r\n                        this.pollAbort.abort();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 5, 6, 7]);\r\n                        return [4 /*yield*/, this.receiving];\r\n                    case 2:\r\n                        _a.sent(); // 这里 receiving 本身是一个 promise result, 用这个对象来监控请求未完成\r\n                        // Send DELETE to clean up long polling on the server\r\n                        // 发送DELETE以清除服务器上的长轮询\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) sending DELETE request to \" + this.url + \".\");\r\n                        deleteOptions = {\r\n                            headers: {}\r\n                        };\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 3:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(deleteOptions, token);\r\n                        return [4 /*yield*/, this.request.delete(this.url, {}, deleteOptions)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n                        return [2 /*return*/, Promise.resolve({\r\n                                errMsg: \"stop success\"\r\n                            })];\r\n                    case 5:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"(LongPolling transport) Stop error.\", e_2);\r\n                        return [2 /*return*/, Promise.reject({\r\n                                errMsg: \"stop fail\"\r\n                            })];\r\n                    case 6:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n                        // Raise close event here instead of in polling\r\n                        // It needs to happen after the DELETE request is sent\r\n                        //在此处引发关闭事件，而不是在轮询中\r\n                        //它需要在发送删除请求后发生\r\n                        this.raiseOnClose();\r\n                        return [7 /*endfinally*/];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 调用关闭回调\r\n     *\r\n     * @private\r\n     * @memberof LongPollingTransport\r\n     */\r\n    LongPollingTransport.prototype.raiseOnClose = function () {\r\n        if (this.onclose) {\r\n            var logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    };\r\n    return LongPollingTransport;\r\n}());\r\nexport { LongPollingTransport };\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt\r\n// Not exported from index\r\n/**\r\n * 小程序socket连接状态[枚举]\r\n */\r\nexport var WxSocketReadyState;\r\n(function (WxSocketReadyState) {\r\n    WxSocketReadyState[WxSocketReadyState[\"CONNECTING\"] = 0] = \"CONNECTING\";\r\n    WxSocketReadyState[WxSocketReadyState[\"OPEN\"] = 1] = \"OPEN\";\r\n    WxSocketReadyState[WxSocketReadyState[\"CLOSING\"] = 2] = \"CLOSING\";\r\n    WxSocketReadyState[WxSocketReadyState[\"CLOSED\"] = 3] = \"CLOSED\";\r\n})(WxSocketReadyState || (WxSocketReadyState = {}));\r\n", "/**\r\n * 小程序版本支持\r\n * @param minimumVersion 最小支持版本号\r\n */\r\nexport var isVersionSupport = function (minimumVersion) {\r\n    // diff\r\n    var compareVersion = function (v1, v2) {\r\n        v1 = v1.split(\".\");\r\n        v2 = v2.split(\".\");\r\n        var len = Math.max(v1.length, v2.length);\r\n        while (v1.length < len) {\r\n            v1.push(\"0\");\r\n        }\r\n        while (v2.length < len) {\r\n            v2.push(\"0\");\r\n        }\r\n        for (var i = 0; i < len; i++) {\r\n            var num1 = parseInt(v1[i]);\r\n            var num2 = parseInt(v2[i]);\r\n            if (num1 > num2) {\r\n                return 1;\r\n            }\r\n            else if (num1 < num2) {\r\n                return -1;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    // 获取当前小程序 版本号\r\n    var SDKVersion = uni.getSystemInfoSync().SDKVersion;\r\n    // check\r\n    return compareVersion(SDKVersion, minimumVersion) >= 0;\r\n};\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Arg, getDataDetail } from \"./Utils\";\r\nimport { WxSocketReadyState } from \"./Polyfills\";\r\nimport { isVersionSupport } from \"./WechatVersionDiff\";\r\n/**\r\n * 微信 sosocket 数据传输\r\n * @description 整体重写了这部分websocket支持,逻辑这样看起来合理一些\r\n */\r\nvar WxSocketTransport = /** @class */ (function () {\r\n    function WxSocketTransport(options) {\r\n        this.readyState = WxSocketReadyState.CONNECTING;\r\n        this.logger = options.logger;\r\n        this.accessTokenFactory = options.accessTokenFactory;\r\n        this.socketUrlFactory = options.socketUrlFactory;\r\n        this.logMessageContent = options.logMessageContent;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this.allowReplaceSocket = options.allowReplaceSocket;\r\n        this.timeout = options.timeout ? options.timeout : 60 * 1000;\r\n        this.delayTime = options.delayTime ? options.delayTime : 100;\r\n        if (options.enableMessageQueue) {\r\n            this.enableMessageQueue = true;\r\n            this.messageQueue = [];\r\n        }\r\n        else {\r\n            this.enableMessageQueue = false;\r\n        }\r\n        if (options.reconnect) {\r\n            this.reconnect = {\r\n                enable: options.reconnect.enable == true ? true : false,\r\n                max: options.reconnect.max ? options.reconnect.max : 3,\r\n                val: 0\r\n            };\r\n        }\r\n        else {\r\n            this.reconnect = {\r\n                enable: false,\r\n                max: 3,\r\n                val: 0\r\n            };\r\n        }\r\n    }\r\n    WxSocketTransport.prototype.connect = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var replacedUrl, token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // vali is exists\r\n                        Arg.isRequired(options, \"options\");\r\n                        // vali url is support by wechat\r\n                        Arg.validationUrlIsSupportByWechat(options.url);\r\n                        this.connectOptions = options; // 连接参数缓存\r\n                        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n                        if (!this.socketUrlFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.socketUrlFactory(options.url)];\r\n                    case 1:\r\n                        replacedUrl = _a.sent();\r\n                        if (replacedUrl) {\r\n                            options.url = replacedUrl;\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 2:\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 3:\r\n                        token = _a.sent();\r\n                        this.logger.log(LogLevel.Debug, \"getted token:\", token);\r\n                        if (token) {\r\n                            options.url += (options.url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4: return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            // 忽略url修正,因为传入错误url的话,将直接抛出异常\r\n                            options.url = options.url.replace(/^http/, \"ws\");\r\n                            // 这里执行的是连接操socket的逻辑\r\n                            var socketTask;\r\n                            // 1.7.0 及以上版本，最多可以同时存在 5 个 WebSocket 连接, 以下版本，一个小程序同时只能有一个 WebSocket 连接，如果当前已存在一个 WebSocket 连接，会自动关闭该连接，并重新创建一个 WebSocket 连接\r\n                            var supportCount = isVersionSupport(\"1.7.0\") ? 5 : 1;\r\n                            if (supportCount <= WxSocketTransport.count && !_this.allowReplaceSocket) {\r\n                                // 抛出异常, 并return\r\n                                reject({\r\n                                    errMsg: \"Maximum connections|\" + WxSocketTransport.count\r\n                                });\r\n                                return;\r\n                            }\r\n                            else if (WxSocketTransport.count == 5) {\r\n                                // 抛出异常, 并return\r\n                                reject({\r\n                                    errMsg: \"Maximum connections|\" + WxSocketTransport.count\r\n                                });\r\n                                return;\r\n                            }\r\n                            if (!socketTask) {\r\n                                socketTask = uni.connectSocket(__assign({ \r\n                                    // 传入 两个默认的 回调,当然也可以在 options 里面覆盖 使用自定义回调.\r\n                                    success: function (res) {\r\n                                        _this.logger.log(LogLevel.Debug, \"uni.connectSocket():success\");\r\n                                    }, fail: function (res) {\r\n                                        _this.logger.log(LogLevel.Debug, \"uni.connectSocket():fail\");\r\n                                        reject(res);\r\n                                    } }, options));\r\n                            }\r\n                            // ! 因为小程序两种协议都支持,所以不需要指定特定的 binaryType\r\n                            /** 连接成功处理 */\r\n                            socketTask.onOpen(function (result) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var _i, _a, msg;\r\n                                return __generator(this, function (_b) {\r\n                                    switch (_b.label) {\r\n                                        case 0:\r\n                                            this.logger.log(LogLevel.Information, \"websocket\\u8FDE\\u63A5\\u5EFA\\u7ACB \" + (this.logMessageContent ? \"wx api:[\" + options.url + \"]\" : \"\"));\r\n                                            this.logger.log(LogLevel.Debug, \"uni.connectSocket success message:\", result);\r\n                                            WxSocketTransport.count += 1;\r\n                                            this.readyState = WxSocketReadyState.OPEN;\r\n                                            this.socketTask = socketTask;\r\n                                            // 等待回调执行完成后,再重新队列中消息\r\n                                            return [4 /*yield*/, resolve()];\r\n                                        case 1:\r\n                                            // 等待回调执行完成后,再重新队列中消息\r\n                                            _b.sent();\r\n                                            if (!(this.enableMessageQueue && this.messageQueue.length > 0)) return [3 /*break*/, 5];\r\n                                            _i = 0, _a = this.messageQueue;\r\n                                            _b.label = 2;\r\n                                        case 2:\r\n                                            if (!(_i < _a.length)) return [3 /*break*/, 5];\r\n                                            msg = _a[_i];\r\n                                            this.logger.log(LogLevel.Debug, \"\\u63A8\\u9001\\u79BB\\u7EBF\\u6D88\\u606F\", this.logMessageContent ? msg : \"\");\r\n                                            return [4 /*yield*/, this.send(msg)];\r\n                                        case 3:\r\n                                            _b.sent();\r\n                                            _b.label = 4;\r\n                                        case 4:\r\n                                            _i++;\r\n                                            return [3 /*break*/, 2];\r\n                                        case 5: return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); });\r\n                            /** 建立连接出错处理 */\r\n                            socketTask.onError(function (res) {\r\n                                _this.readyState = WxSocketReadyState.CLOSED;\r\n                                reject(res);\r\n                            });\r\n                            /** 接收到消息处理 */\r\n                            socketTask.onMessage(function (res) {\r\n                                _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received.\", getDataDetail(res.data, _this.logMessageContent));\r\n                                if (_this.onreceive) {\r\n                                    _this.onreceive(res.data);\r\n                                }\r\n                            });\r\n                            socketTask.onClose(function (res) { return _this.close(res); });\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** 休眠 */\r\n    WxSocketTransport.prototype.delay = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            // ! 由于小程序机制,所以需要手工清理timer\r\n            var timer = setTimeout(function () {\r\n                clearTimeout(timer);\r\n                resolve();\r\n            }, _this.delayTime);\r\n        });\r\n    };\r\n    /** 发送 */\r\n    WxSocketTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var loop;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(this.socketTask && this.readyState === WxSocketReadyState.OPEN)) return [3 /*break*/, 1];\r\n                        this.logger.log(LogLevel.Trace, \"[WxSocket] \\u63A8\\u9001\\u6570\\u636E.\", getDataDetail(data, this.logMessageContent));\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                _this.socketTask.send({\r\n                                    data: data,\r\n                                    success: function () { return resolve(); },\r\n                                    fail: function () { return reject(); }\r\n                                });\r\n                            })];\r\n                    case 1:\r\n                        if (!this.enableMessageQueue) return [3 /*break*/, 5];\r\n                        this.messageQueue.push(data);\r\n                        loop = 0;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!(this.socketTask && this.readyState !== WxSocketReadyState.OPEN)) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.delay()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        loop += this.delayTime;\r\n                        if (loop >= this.timeout) {\r\n                            // 超时设置\r\n                            return [2 /*return*/, Promise.reject({\r\n                                    errMsg: \"WebSocket connect timeout.\"\r\n                                })];\r\n                        }\r\n                        return [3 /*break*/, 2];\r\n                    case 4: \r\n                    // 回调\r\n                    return [2 /*return*/, this.send(data)];\r\n                    case 5: return [2 /*return*/, Promise.reject({\r\n                            errMsg: \"WebSocket is not in the OPEN state\"\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** 停止 */\r\n    WxSocketTransport.prototype.stop = function (msg) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.socketTask) {\r\n                _this.socketTask.close({\r\n                    code: 1000,\r\n                    reason: \"stop socket\",\r\n                    success: function (res) { return resolve(msg || res); },\r\n                    fail: function (res) { return reject(res); }\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * 连接断开处理\r\n     * @param res\r\n     */\r\n    WxSocketTransport.prototype.close = function (res) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        WxSocketTransport.count = WxSocketTransport.count > 0 ? WxSocketTransport.count - 1 : 0;\r\n        if (this.onclose) {\r\n            if (res && res.code !== 1000) {\r\n                this.onclose(new Error(\"WebSocket closed with status code: \" + res.code + \" (\" + res.reason + \").\"));\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * 静态变量 - 表示当前是否有正在连接中的socket\r\n     */\r\n    WxSocketTransport.count = 0;\r\n    return WxSocketTransport;\r\n}());\r\nexport { WxSocketTransport };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { Arg, createLogger } from \"./Utils\";\r\nimport DefaultRequest from \"./DefualtRequest\";\r\nimport { ResponseType } from \"./wx-request/model/ResponseType\";\r\nimport { WxSocketTransport } from \"./WxSocketTransport\";\r\nvar MAX_REDIRECTS = 100;\r\nvar WxSocketModule = WxSocketTransport;\r\nvar LongPollingModule = LongPollingTransport;\r\n/** @private */\r\nvar HttpConnection = /** @class */ (function () {\r\n    function HttpConnection(url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.features = {};\r\n        Arg.isRequired(url, \"url\");\r\n        this.logger = createLogger(options.logger);\r\n        options = options || {};\r\n        // ! 这里修改为自定义解析 和 默认传入 全路径方式\r\n        this.baseUrl = options.resolveUrl ? options.resolveUrl(url) : this.resolveUrl(url);\r\n        options.logMessageContent = options.logMessageContent || false;\r\n        // ! 修改 options 参数赋值方式\r\n        if (!options.WxSocket && wx) {\r\n            options.WxSocket = WxSocketModule;\r\n        }\r\n        if (!options.LongPolling) {\r\n            options.LongPolling = LongPollingModule;\r\n        }\r\n        this.request = options.request || new DefaultRequest({}, this.logger);\r\n        this.connectionState = 2 /* Disconnected */;\r\n        this.options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    HttpConnection.prototype.start = function (transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Debug, \"Starting connection with transfer format '\" + TransferFormat[transferFormat] + \"'.\", TransferFormat);\r\n        if (this.connectionState !== 2 /* Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start a connection that is not in the 'Disconnected' state. state is \" + this.connectionState));\r\n        }\r\n        this.connectionState = 0 /* Connecting */;\r\n        this.startPromise = this.startInternal(transferFormat);\r\n        return this.startPromise;\r\n    };\r\n    HttpConnection.prototype.send = function (data) {\r\n        if (this.connectionState !== 1 /* Connected */) {\r\n            throw new Error(\"Cannot send data if the connection is not in the 'Connected' State.\");\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this.transport.send(data);\r\n    };\r\n    HttpConnection.prototype.stop = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        // Set error as soon as possible otherwise there is a race between\r\n                        // the transport closing and providing an error and the error from a close message\r\n                        // We would prefer the close message error.\r\n                        this.stopError = error;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.startPromise];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!this.transport) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.transport.stop()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        this.transport = undefined;\r\n                        _a.label = 6;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.startInternal = function (transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, negotiateResponse, redirects, _loop_1, this_1, state_1, e_2;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.baseUrl;\r\n                        this.accessTokenFactory = this.options.accessTokenFactory;\r\n                        this.socketUrlFactory = this.options.socketUrlFactory;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 12, , 13]);\r\n                        if (!this.options.skipNegotiation) return [3 /*break*/, 5];\r\n                        if (!(this.options.transport === HttpTransportType.WebSockets)) return [3 /*break*/, 3];\r\n                        // No need to add a connection ID in this case\r\n                        this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        return [4 /*yield*/, this.transport.connect({\r\n                                url: url,\r\n                                header: {},\r\n                                protocols: [],\r\n                                tcpNoDelay: true,\r\n                                transferFormat: transferFormat\r\n                            })];\r\n                    case 2:\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3: throw Error(\"Negotiation can only be skipped when using the WxSocket transport directly.\");\r\n                    case 4: return [3 /*break*/, 11];\r\n                    case 5:\r\n                        negotiateResponse = null;\r\n                        redirects = 0;\r\n                        _loop_1 = function () {\r\n                            var accessToken_1;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this_1.getNegotiationResponse(url)];\r\n                                    case 1:\r\n                                        negotiateResponse = _a.sent();\r\n                                        // the user tries to stop the connection when it is being started\r\n                                        if (this_1.connectionState === 2 /* Disconnected */) {\r\n                                            return [2 /*return*/, { value: void 0 }];\r\n                                        }\r\n                                        if (negotiateResponse.error) {\r\n                                            throw Error(negotiateResponse.error);\r\n                                        }\r\n                                        if (negotiateResponse.ProtocolVersion) {\r\n                                            throw Error(\"检测到尝试连接到一个 非 ASP.NET Core 服务器。此客户端仅支持连接到ASP.NET Core 服务器。. See https://aka.ms/signalr-core-differences for details.\");\r\n                                        }\r\n                                        if (negotiateResponse.url) {\r\n                                            url = negotiateResponse.url;\r\n                                        }\r\n                                        if (negotiateResponse.accessToken) {\r\n                                            accessToken_1 = negotiateResponse.accessToken;\r\n                                            // ! 通过 /negotiate 接口返回的assessToken 仅支持 accessTokenFactory(),如果实现了 socketUrlFactory(),会忽略掉这个token\r\n                                            this_1.accessTokenFactory = function () { return accessToken_1; };\r\n                                        }\r\n                                        redirects++;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        };\r\n                        this_1 = this;\r\n                        _a.label = 6;\r\n                    case 6: return [5 /*yield**/, _loop_1()];\r\n                    case 7:\r\n                        state_1 = _a.sent();\r\n                        if (typeof state_1 === \"object\")\r\n                            return [2 /*return*/, state_1.value];\r\n                        _a.label = 8;\r\n                    case 8:\r\n                        if (negotiateResponse.url && redirects < MAX_REDIRECTS) return [3 /*break*/, 6];\r\n                        _a.label = 9;\r\n                    case 9:\r\n                        if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                            throw Error(\"Negotiate redirection limit exceeded. -fy : 超出协商重定向限制\");\r\n                        }\r\n                        return [4 /*yield*/, this.createTransport(url, this.options.transport, negotiateResponse, transferFormat)];\r\n                    case 10:\r\n                        _a.sent();\r\n                        _a.label = 11;\r\n                    case 11:\r\n                        if (this.transport instanceof LongPollingTransport) {\r\n                            this.features.inherentKeepAlive = true;\r\n                        }\r\n                        this.transport.onreceive = this.onreceive;\r\n                        this.transport.onclose = function (e) { return _this.stopConnection(e); };\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 12:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the connection: \", e_2);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        this.transport = undefined;\r\n                        throw e_2;\r\n                    case 13: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.getNegotiationResponse = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var headers, token, negotiateUrl, response, e_3;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _b.sent();\r\n                        if (token) {\r\n                            headers = (_a = {},\r\n                                _a[\"Authorization\"] = \"Bearer \" + token,\r\n                                _a);\r\n                        }\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        negotiateUrl = this.resolveNegotiateUrl(url);\r\n                        this.logger.log(LogLevel.Debug, \"Sending negotiation request: \" + negotiateUrl + \".\");\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _b.trys.push([3, 5, , 6]);\r\n                        return [4 /*yield*/, this.request.post(negotiateUrl, {}, {\r\n                                headers: headers,\r\n                                responseType: ResponseType.TEXT\r\n                            })];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            throw Error(\"Unexpected status code returned from negotiate \" + response.statusCode);\r\n                        }\r\n                        return [2 /*return*/, JSON.parse(response.data)];\r\n                    case 5:\r\n                        e_3 = _b.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \", e_3);\r\n                        throw e_3;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.createConnectUrl = function (url, connectionId) {\r\n        if (!connectionId) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (\"id=\" + connectionId);\r\n    };\r\n    HttpConnection.prototype.createTransport = function (url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectUrl, transports, _i, transports_1, endpoint, transport, ex_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        if (!this.isITransport(requestedTransport)) return [3 /*break*/, 2];\r\n                        this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n                        this.transport = requestedTransport;\r\n                        return [4 /*yield*/, this.transport.connect({\r\n                                url: connectUrl,\r\n                                transferFormat: requestedTransferFormat\r\n                            })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        transports = negotiateResponse.availableTransports || [];\r\n                        _i = 0, transports_1 = transports;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(_i < transports_1.length)) return [3 /*break*/, 9];\r\n                        endpoint = transports_1[_i];\r\n                        this.connectionState = 0 /* Connecting */;\r\n                        transport = this.resolveTransport(endpoint, requestedTransport, requestedTransferFormat);\r\n                        if (!(typeof transport === \"number\")) return [3 /*break*/, 8];\r\n                        this.transport = this.constructTransport(transport);\r\n                        if (!!negotiateResponse.connectionId) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.getNegotiationResponse(url)];\r\n                    case 4:\r\n                        negotiateResponse = _a.sent();\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, this.transport.connect({\r\n                                url: connectUrl,\r\n                                transferFormat: requestedTransferFormat\r\n                            })];\r\n                    case 6:\r\n                        _a.sent();\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 7:\r\n                        ex_1 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the transport '\" + HttpTransportType[transport] + \"':\", ex_1);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        negotiateResponse.connectionId = undefined;\r\n                        return [3 /*break*/, 8];\r\n                    case 8:\r\n                        _i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 9: throw new Error(\"Unable to initialize any of the available transports.\");\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @description 这里对原来的实例化方式进行了改写,如果传入的是实例化完成的 Transport ,将直接返回\r\n     *  如果是传入继承 Transport的 class,将执行 new Transport(options)\r\n     * - 这里对原生的多项入参合并成了options(这点差异需要注意)\r\n     * @private\r\n     * @param {HttpTransportType} transport\r\n     * @returns\r\n     * @memberof HttpConnection\r\n     */\r\n    HttpConnection.prototype.constructTransport = function (transport) {\r\n        var _a = this.options, WxSocket = _a.WxSocket, LongPolling = _a.LongPolling, wxSocketTransportOptions = _a.wxSocketTransportOptions, longPollingTransportOptions = _a.longPollingTransportOptions;\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets: // wx socket 方式\r\n                if (WxSocket instanceof WxSocketTransport) {\r\n                    return WxSocket;\r\n                }\r\n                else {\r\n                    return new WxSocket(wxSocketTransportOptions\r\n                        ? wxSocketTransportOptions\r\n                        : {\r\n                            // token 工厂\r\n                            accessTokenFactory: this.accessTokenFactory,\r\n                            // socket 单独实现一个socket url factory(用于后端改了 accecc_token 参数名的场景)\r\n                            socketUrlFactory: this.socketUrlFactory,\r\n                            // logger\r\n                            logger: this.logger,\r\n                            logMessageContent: this.options.logMessageContent || false,\r\n                            /** 是否允许替换socket连接\r\n                             *\r\n                             * 小程序 版本 < 1.7.0 时, 最多允许存在一个socket连接, 此参数用于是否允许在这个情况下,替换这个打开的socket\r\n                             */\r\n                            allowReplaceSocket: true,\r\n                            /** 是否启用消息队列缓存连接建立前消息,并在建立连接后发送 */\r\n                            enableMessageQueue: this.options.enableMessageQueue == undefined ? true : this.options.enableMessageQueue,\r\n                            /** 重连设置 */\r\n                            reconnect: {\r\n                                enable: true,\r\n                                max: 3\r\n                            }\r\n                        });\r\n                }\r\n            case HttpTransportType.LongPolling: // 长轮询方式\r\n                if (LongPolling instanceof LongPollingTransport) {\r\n                    return LongPolling;\r\n                }\r\n                else {\r\n                    return new LongPolling(longPollingTransportOptions\r\n                        ? longPollingTransportOptions\r\n                        : {\r\n                            request: this.request,\r\n                            accessTokenFactory: this.accessTokenFactory,\r\n                            logger: this.logger,\r\n                            logMessageContent: this.options.logMessageContent || false\r\n                        });\r\n                }\r\n            default:\r\n                throw new Error(\"Unknown transport: \" + transport + \".\");\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveTransport = function (endpoint, requestedTransport, requestedTransferFormat) {\r\n        var transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, \"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\r\n        }\r\n        else {\r\n            var transferFormats = endpoint.transferFormats.map(function (s) { return TransferFormat[s]; });\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if (transport === HttpTransportType.WebSockets && !this.options.WxSocket) {\r\n                        this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it is not supported in your environment.'\");\r\n                    }\r\n                    else {\r\n                        this.logger.log(LogLevel.Debug, \"Selecting transport '\" + HttpTransportType[transport] + \"'.\");\r\n                        return transport;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it does not support the requested transfer format '\" + TransferFormat[requestedTransferFormat] + \"'.\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it was disabled by the client.\");\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    HttpConnection.prototype.isITransport = function (transport) {\r\n        return transport && typeof transport === \"object\" && \"connect\" in transport;\r\n    };\r\n    HttpConnection.prototype.changeState = function (from, to) {\r\n        if (this.connectionState === from) {\r\n            this.connectionState = to;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    HttpConnection.prototype.stopConnection = function (error) {\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, \"Connection disconnected with error '\" + error + \"'.\");\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        this.connectionState = 2 /* Disconnected */;\r\n        if (this.onclose) {\r\n            this.onclose(error);\r\n        }\r\n    };\r\n    /**\r\n     * ! 由于小程序内必须指定 BaseUrl 关系,这里如果不是全路径的话，暂时直接抛出异常\r\n     * @param url\r\n     */\r\n    HttpConnection.prototype.resolveUrl = function (url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        else {\r\n            throw new Error(\"HttpConnection. \\u89E3\\u6790url\\u9519\\u8BEF,\\u5C0F\\u7A0B\\u5E8F\\u5185\\u9700\\u8981\\u4F20\\u5165\\u5168\\u8DEF\\u5F84 ->link: \" + url);\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveNegotiateUrl = function (url) {\r\n        var index = url.indexOf(\"?\");\r\n        var negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"?negotiateVersion=1\" : url.substring(index)+\"&negotiateVersion=1\";\r\n        return negotiateUrl;\r\n    };\r\n    return HttpConnection;\r\n}());\r\nexport { HttpConnection };\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || (actualTransport & requestedTransport) !== 0;\r\n}\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/**\r\n * 握手协议\r\n * @private\r\n */\r\nvar HandshakeProtocol = /** @class */ (function () {\r\n    function HandshakeProtocol() {\r\n    }\r\n    // Handshake request is always JSON - 握手请求总是JSON\r\n    HandshakeProtocol.prototype.writeHandshakeRequest = function (handshakeRequest) {\r\n        // commond\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    };\r\n    /**\r\n     * 解析握手协议 response\r\n     *\r\n     * @param {*} data\r\n     * @returns {[any, HandshakeResponseMessage]}\r\n     * @memberof HandshakeProtocol\r\n     */\r\n    HandshakeProtocol.prototype.parseHandshakeResponse = function (data) {\r\n        var responseMessage;\r\n        var messageData;\r\n        var remainingData;\r\n        // ! 删除了 @aspnet/signlaR 原有的 Buffer(仅适用 nodejs)判断\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response - fy: 格式是二进制的，但仍然需要从握手响应中读取JSON文本\r\n            var binaryData = new Uint8Array(data);\r\n            var separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response - fy:分隔符前的内容是握手响应\r\n            // optional content after is additional messages - fy:后面是附加消息的可选内容\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            var textData = data;\r\n            var separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response - fy:分隔符前的内容是握手响应\r\n            // optional content after is additional messages - fy:后面是附加消息的可选内容\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message - fy: 在这一点上，我们应该只有一个握手信息\r\n        var messages = TextMessageFormat.parse(messageData);\r\n        var response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server. -(fy: 需要来自服务器的握手响应)\");\r\n        }\r\n        responseMessage = response;\r\n        // multiple messages could have arrived with handshake - fy: 握手时可能会收到多条消息\r\n        // return additional data to be parsed as usual, or null if all parsed - fy: 返回要像往常一样分析的其他数据，如果所有数据都已分析，则返回null\r\n        return [remainingData, responseMessage];\r\n    };\r\n    return HandshakeProtocol;\r\n}());\r\nexport { HandshakeProtocol };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Arg, Subject } from \"./Utils\";\r\nimport { EventNotFoundError } from \"./Errors\";\r\nvar DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nvar DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[HubConnectionState[\"Disconnected\"] = 0] = \"Disconnected\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[HubConnectionState[\"Connected\"] = 1] = \"Connected\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nvar HubConnection = /** @class */ (function () {\r\n    function HubConnection(connection, logger, protocol) {\r\n        var _this = this;\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = function (data) { return _this.processIncomingData(data); };\r\n        this.connection.onclose = function (error) { return _this.connectionClosed(error); };\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.id = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    HubConnection.create = function (connection, logger, protocol) {\r\n        return new HubConnection(connection, logger, protocol);\r\n    };\r\n    Object.defineProperty(HubConnection.prototype, \"state\", {\r\n        /** Indicates the state of the {@link HubConnection} to the server. */\r\n        get: function () {\r\n            return this.connectionState;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.start = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var handshakeRequest, handshakePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        handshakeRequest = {\r\n                            protocol: this.protocol.name,\r\n                            version: this.protocol.version\r\n                        };\r\n                        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n                        this.receivedHandshakeResponse = false;\r\n                        handshakePromise = new Promise(function (resolve, reject) {\r\n                            _this.handshakeResolver = resolve;\r\n                            _this.handshakeRejecter = reject;\r\n                        });\r\n                        return [4 /*yield*/, this.connection.start(this.protocol.transferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n                        return [4 /*yield*/, this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Information, \"Using HubProtocol '\" + this.protocol.name + \"'.\", this.protocol);\r\n                        // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n                        this.cleanupTimeout();\r\n                        this.resetTimeoutPeriod();\r\n                        this.resetKeepAliveInterval();\r\n                        // Wait for the handshake to complete before marking connection as connected\r\n                        return [4 /*yield*/, handshakePromise];\r\n                    case 3:\r\n                        // Wait for the handshake to complete before marking connection as connected\r\n                        _a.sent();\r\n                        this.connectionState = HubConnectionState.Connected;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.stop = function () {\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        return this.connection.stop();\r\n    };\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    HubConnection.prototype.stream = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createStreamInvocation(methodName, args);\r\n        var subject = new Subject(function () {\r\n            var cancelInvocation = _this.createCancelInvocation(invocationDescriptor.invocationId);\r\n            var cancelMessage = _this.protocol.writeMessage(cancelInvocation);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n            return _this.sendMessage(cancelMessage);\r\n        });\r\n        this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next(invocationEvent.item);\r\n                }\r\n            }\r\n        };\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        this.sendMessage(message).catch(function (e) {\r\n            subject.error(e);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        return subject;\r\n    };\r\n    HubConnection.prototype.sendMessage = function (message) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.send = function (methodName) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, true);\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        return this.sendMessage(message);\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    HubConnection.prototype.invoke = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, false);\r\n        var p = new Promise(function (resolve, reject) {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            _this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"Unexpected message type: \" + invocationEvent.type));\r\n                    }\r\n                }\r\n            };\r\n            var message = _this.protocol.writeMessage(invocationDescriptor);\r\n            _this.sendMessage(message).catch(function (e) {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete _this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n        });\r\n        return p;\r\n    };\r\n    HubConnection.prototype.on = function (methodName, newMethod, only) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (only) {\r\n            this.methods[methodName] = [newMethod];\r\n            return;\r\n        }\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this.methods[methodName].push(newMethod);\r\n    };\r\n    HubConnection.prototype.off = function (methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        var handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            var removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this.methods[methodName];\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    HubConnection.prototype.onclose = function (callback) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    };\r\n    HubConnection.prototype.onEventNotFound = function (callback) {\r\n        if (callback) {\r\n            this.eventNotFoundCallback = callback;\r\n        }\r\n    };\r\n    HubConnection.prototype.processIncomingData = function (data) {\r\n        this.cleanupTimeout();\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            var messages = this.protocol.parseMessages(data, this.logger);\r\n            for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n                var message = messages_1[_i];\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        var callback = this.callbacks[message.invocationId];\r\n                        if (callback != null) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        // We don't want to wait on the stop itself.\r\n                        // tslint:disable-next-line:no-floating-promises\r\n                        this.connection.stop(message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined);\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, \"Invalid message type: \" + message.type + \".\", message);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this.resetTimeoutPeriod();\r\n    };\r\n    HubConnection.prototype.processHandshakeResponse = function (data) {\r\n        var _a;\r\n        var responseMessage;\r\n        var remainingData;\r\n        try {\r\n            _a = this.handshakeProtocol.parseHandshakeResponse(data), remainingData = _a[0], responseMessage = _a[1];\r\n        }\r\n        catch (e) {\r\n            var message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n            var error = new Error(message);\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(error);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            var message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n            this.handshakeRejecter(message);\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(new Error(message));\r\n            throw new Error(message);\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    };\r\n    HubConnection.prototype.resetKeepAliveInterval = function () {\r\n        var _this = this;\r\n        this.cleanupPingTimer();\r\n        this.pingServerHandle = setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(this.connectionState === HubConnectionState.Connected)) return [3 /*break*/, 4];\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.sendMessage(this.cachedPingMessage)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        // We don't care about the error. It should be seen elsewhere in the client.\r\n                        // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                        this.cleanupPingTimer();\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }, this.keepAliveIntervalInMilliseconds);\r\n    };\r\n    HubConnection.prototype.resetTimeoutPeriod = function () {\r\n        var _this = this;\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(function () { return _this.serverTimeout(); }, this.serverTimeoutInMilliseconds);\r\n        }\r\n    };\r\n    HubConnection.prototype.serverTimeout = function () {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    };\r\n    HubConnection.prototype.invokeClientMethod = function (invocationMessage) {\r\n        var _this = this;\r\n        var methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                // Time:2020年1月1日 22:30:30 增加一个 try cache, 获取 signalr 在特定场景下,处理事件失败会关闭问题.\r\n                methods.forEach(function (m) { return m.apply(_this, invocationMessage.arguments); });\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n            }\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                var message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n                // We don't need to wait on this Promise.\r\n                // tslint:disable-next-line:no-floating-promises\r\n                this.connection.stop(new Error(message));\r\n            }\r\n        }\r\n        else {\r\n            var message = \"No client method with the name '\" + invocationMessage.target + \"' found.\";\r\n            this.logger.log(LogLevel.Warning, message);\r\n            this.logger.log(LogLevel.Information, \"Current Event Methods:\" + Object.keys(this.methods));\r\n            this.eventNotFound(new EventNotFoundError(invocationMessage, message));\r\n        }\r\n    };\r\n    HubConnection.prototype.connectionClosed = function (error) {\r\n        var _this = this;\r\n        var callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        // if handshake is in progress start will be waiting for the handshake promise, so we complete it\r\n        // if it has already completed this should just noop\r\n        if (this.handshakeRejecter) {\r\n            this.handshakeRejecter(error);\r\n        }\r\n        Object.keys(callbacks).forEach(function (key) {\r\n            var callback = callbacks[key];\r\n            callback(null, error ? error : new Error(\"Invocation canceled due to connection being closed.\"));\r\n        });\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.closedCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\r\n    };\r\n    HubConnection.prototype.eventNotFound = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var r;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.eventNotFoundCallback) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.eventNotFoundCallback(error)];\r\n                    case 1:\r\n                        r = _a.sent();\r\n                        if (r === true) {\r\n                            this.logger.log(LogLevel.Information, \"retry invoke local message callback.\");\r\n                            this.invokeClientMethod(error.invocationMessage);\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HubConnection.prototype.cleanupPingTimer = function () {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.cleanupTimeout = function () {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.createInvocation = function (methodName, args, nonblocking) {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                target: methodName,\r\n                type: MessageType.Invocation\r\n            };\r\n        }\r\n        else {\r\n            var id = this.id;\r\n            this.id++;\r\n            return {\r\n                arguments: args,\r\n                invocationId: id.toString(),\r\n                target: methodName,\r\n                type: MessageType.Invocation\r\n            };\r\n        }\r\n    };\r\n    HubConnection.prototype.createStreamInvocation = function (methodName, args) {\r\n        var id = this.id;\r\n        this.id++;\r\n        return {\r\n            arguments: args,\r\n            invocationId: id.toString(),\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation\r\n        };\r\n    };\r\n    HubConnection.prototype.createCancelInvocation = function (id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation\r\n        };\r\n    };\r\n    return HubConnection;\r\n}());\r\nexport { HubConnection };\r\n", "// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n/** A builder for configuring {@link @aspnet/signalr.HubConnection} instances. */\r\nvar HubConnectionBuilder = /** @class */ (function () {\r\n    function HubConnectionBuilder() {\r\n    }\r\n    HubConnectionBuilder.prototype.configureLogging = function (logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    };\r\n    HubConnectionBuilder.prototype.withUrl = function (url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = transportTypeOrOptions;\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @aspnet/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    HubConnectionBuilder.prototype.withHubProtocol = function (protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    };\r\n    /** Creates a {@link @aspnet/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @aspnet/signalr.HubConnection}.\r\n     */\r\n    HubConnectionBuilder.prototype.build = function () {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        var httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        var connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol());\r\n    };\r\n    return HubConnectionBuilder;\r\n}());\r\nexport { HubConnectionBuilder };\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n", "// 版权所有（c）.NET基金会。保留所有权利。\r\n// 在2.0版Apache许可下授权。有关许可证信息，请参见项目根目录中的License.txt。\r\n// 版本号模板 - builder 自动更新,无需手动\r\n/** The version of the SignalR client. */\r\nexport var VERSION = \"1.1.6\";\r\n// 协议|类型参数 导出\r\nexport { MessageType } from \"./IHubProtocol\";\r\n// json格式传输协议\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\n// 微信最低版本支持检查\r\nexport { isVersionSupport } from \"./WechatVersionDiff\";\r\n// 微信socket传输实现\r\nexport { WxSocketTransport } from \"./WxSocketTransport\";\r\n// 微信 request 请求实现(封装 uni.requestWithCookie)\r\nexport { Request } from \"./wx-request/index\";\r\nexport { RequestMethod, ResponseType } from \"./wx-request/model\";\r\n// Error 接口\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\n// logger 接口\r\nexport { LogLevel } from \"./ILogger\";\r\n// Transport 接口\r\nexport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\n"],
  "mappings": "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",
  "names": ["MessageType", "LogLevel", "HttpTransportType", "TransferFormat", "NullLogger", "TextMessageFormat", "JsonHubProtocol", "AbortController", "d", "b", "HttpError", "TimeoutError", "AbortError", "EventNotFoundError", "ResponseType", "Arg", "Subject", "SubjectSubscription", "ConsoleLogger", "RequestMethod", "__awaiter", "__generator", "Request", "_this", "_a", "res", "__extends", "d", "b", "__assign", "DefaultRequest", "__awaiter", "__generator", "LongPollingTransport", "WxSocketReadyState", "__assign", "__awaiter", "__generator", "WxSocketTransport", "_a", "__awaiter", "__generator", "HttpConnection", "_a", "HandshakeProtocol", "__awaiter", "__generator", "HubConnectionState", "HubConnection", "HubConnectionBuilder"]
}
